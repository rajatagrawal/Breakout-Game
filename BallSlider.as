package  {		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.KeyboardEvent;	import flash.ui.Keyboard;	import fl.transitions.Tween;	import fl.transitions.easing.*;			public class BallSlider extends MovieClip {						public var typeOfObject:String;		public var screenSizeLeft:Number;		public var screenSizeRight:Number;		public var rightKeyPressed:Boolean;		public var leftKeyPressed:Boolean;		public var velocity:Number;		public var acceleration:Number;		public var friction:Number;		public var widthStepSize:Number;		public var maximumSliderSize:Number;		public var minimumSliderSize:Number;						public function BallSlider(getX:Number, getY:Number, getScreenSizeRight:Number, getScreenSizeLeft:Number, getAcceleration:Number, getFriction:Number) 		{			// constructor code			this.x = getX;			this.y = getY;			typeOfObject = "slider";			screenSizeLeft = getScreenSizeLeft;			screenSizeRight = getScreenSizeRight;			velocity = 0;			acceleration = getAcceleration;			friction = getFriction;			leftKeyPressed = false;			rightKeyPressed = false;			widthStepSize = 10;			maximumSliderSize = 129;			minimumSliderSize = 69;											}						public function startMotion()		{			this.x = 400 - (this.width /2);			this.y = 440;			this.addEventListener(Event.ENTER_FRAME, enableKeyboardInteraction);			this.addEventListener(Event.ENTER_FRAME, moveSlider);					}				public function increaseWidth()		{			if (this.width + widthStepSize <= maximumSliderSize)			{				this.width = this.width + widthStepSize;			}		}		public function decreaseWidth()		{			if (this.width - widthStepSize >= minimumSliderSize)			{				this.width = this.width - widthStepSize;			}		}		public function moveSlider(event:Event)		{			if (rightKeyPressed == true)			{				velocity += acceleration;					if (velocity >=13)						velocity = 13;			}						else if (leftKeyPressed == true)			{				velocity -= acceleration;					if (velocity <=-13)						velocity = -13;			}						//else {			if (velocity >0)			{				//trace("it is coming here");								if ((this.x + this.width) < (screenSizeRight - velocity))				{					velocity *= friction;					this.x = this.x + velocity;				}								else									velocity = 0;			}						else if (velocity <0)			{								if (this.x > (screenSizeLeft - velocity))				{					velocity *= friction;					this.x = this.x + velocity;				}				else									velocity = 0;			}							}				public function enableKeyboardInteraction(event:Event)		{			stage.addEventListener(KeyboardEvent.KEY_DOWN,setKeyFlags);			stage.addEventListener(KeyboardEvent.KEY_UP,clearKeyFlags);			this.removeEventListener(Event.ENTER_FRAME, enableKeyboardInteraction);					}				public function clearKeyFlags(event:KeyboardEvent)		{			if (event.keyCode == Keyboard.RIGHT)			{				rightKeyPressed = false;				velocity = 0;			}							else if (event.keyCode == Keyboard.LEFT)			{				leftKeyPressed = false;				velocity = 0;			}		}								public function setKeyFlags(event:KeyboardEvent)		{			// move slider to the right on pressing 'p' or 'P'			// 80 is for 'p'			if (event.keyCode == 80 || event.keyCode == Keyboard.RIGHT)				rightKeyPressed = true;							// 81 is for 'q'			else if (event.keyCode == 81 || event.keyCode == Keyboard.LEFT)				leftKeyPressed = true;		}						public function stopMotion()		{			stage.removeEventListener(KeyboardEvent.KEY_DOWN,moveSlider);			this.removeEventListener(Event.ENTER_FRAME, moveSlider);					}	}	}