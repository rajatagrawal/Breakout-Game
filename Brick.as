package  {		import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.net.URLRequest;	import flash.display.Loader;	import fl.transitions.Tween;	import fl.transitions.easing.*;	import fl.transitions.TweenEvent;		public class Brick extends MovieClip 	{		public var typeOfObject:String;		public var isDestroyed:Boolean;		public var brickColor:String;		public var imageRequest:URLRequest;		public var specialBrick:specialBrickAnimation;		public var disappearTween:Tween;		public var noOfBlinks:int;		public var gamePlay:GamePlay;		public function Brick(getX:Number, getY:Number,getGamePlay:GamePlay,color:String = "random")		{			// constructor code			typeOfObject = new String("brick");			gamePlay = getGamePlay;			setupBrickImage(color);			this.x = getX;			this.y = getY;						isDestroyed = false;					}		public function setupBrickImage(color:String)		{			imageRequest = new URLRequest();						if (color == "green")			{				brickColor = color;				imageRequest.url = "Images/brick_green.png";			}							else if (color == "blue")			{				brickColor = color;				imageRequest.url = "Images/brick_blue.png";			}						else if (color == "red")			{				brickColor = color;				imageRequest.url = "Images/brick_red.png";			}										else if (color =="yellow")			{				brickColor = color;				imageRequest.url = "Images/brick_yellow.png";			}						else if (color == "special")			{				brickColor = color;				imageRequest.url = "donotLoadImage";				specialBrick = new specialBrickAnimation();				specialBrick.play();				return;							}										else if (color == "random")			{				var randomColor:int;								if (gamePlay.noOfSpecialBricks <gamePlay.maximumNoOfSpecialBricks)					randomColor = Math.ceil(Math.random() * 5);				else					randomColor = Math.ceil(Math.random() * 4);								if (randomColor == 1)				{					brickColor = "green";					imageRequest.url = "Images/brick_green.png";				}				else if (randomColor == 2)				{					brickColor = "blue";					imageRequest.url = "Images/brick_blue.png";				}				else if (randomColor == 3)				{					brickColor = "red";					imageRequest.url = "Images/brick_red.png";				}				else if (randomColor == 4)				{					brickColor = "yellow";					imageRequest.url = "Images/brick_yellow.png";				}				else if (randomColor == 5)				{					gamePlay.noOfSpecialBricks = gamePlay.noOfSpecialBricks + 1;					brickColor = "special";					imageRequest.url = "donotLoadImage";					specialBrick = new specialBrickAnimation();					addChild(specialBrick);					specialBrick.play();										return;				}			}					}				public function makeDisappear()		{			disappearTween = new Tween(this,"alpha",Regular.easeIn,1,0,0.20,true);		}		public function destroyed()		{			isDestroyed = true;			makeDisappear();									//while (this.alpha != 0);			//return;			//this.alpha = 0;		}		public function blink(getNoOfBlinks:int)		//public function blink(getNoOfBlinks:int, getGamePlay:GamePlay)		{			//gamePlay = getGamePlay;			noOfBlinks = getNoOfBlinks;			makeBlink(null);		}		public function makeBlink(event:TweenEvent)		{			if (disappearTween != null)				disappearTween.removeEventListener(TweenEvent.MOTION_FINISH,makeBlink);							//if (noOfBlinks >0)			//{				disappearTween = new Tween(this,"alpha",Regular.easeIn,1,0,0.1,true);				if (noOfBlinks>0)					disappearTween.addEventListener(TweenEvent.MOTION_FINISH,makeBrickReappear);				else if (noOfBlinks ==0)					disappearTween.addEventListener(TweenEvent.MOTION_FINISH,startCurriculumQuestion);			//}		}		public function startCurriculumQuestion(event:TweenEvent)		{			gamePlay.startQuestion();		}		public function makeBrickReappear(event:TweenEvent)		{			noOfBlinks = noOfBlinks -1 ;			disappearTween.removeEventListener(TweenEvent.MOTION_FINISH,makeBrickReappear);			disappearTween = new Tween(this,"alpha",Regular.easeIn,0,1,0.1,true);			disappearTween.addEventListener(TweenEvent.MOTION_FINISH,makeBlink);					}			}	}