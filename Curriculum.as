package  {		import flash.display.MovieClip;	import flash.net.URLRequest;	import flash.display.Loader;	import flash.events.Event;	import flash.events.KeyboardEvent;	import flash.ui.Keyboard;		public class Curriculum extends MovieClip	{		public var imageURL:Array;		public var images:Array;		public var gameImageLoader:ImageLoader;		public var answerSelectorX:Number;		public var answerSelectorY:Number;		public var answerSelectorWidth:Number;		public var answerSelectorHeight:Number;		public var gamePlay:GamePlay;				public function Curriculum(imageLoader:ImageLoader, getGamePlay:GamePlay) {			// constructor code			gameImageLoader = imageLoader;			answerSelectorX = 200;			answerSelectorY = 250;			answerSelectorHeight = 200;			answerSelectorWidth = 200;			gamePlay = getGamePlay;		}	public function setupImagesURL()	{		imageURL = new Array();		images = new Array();				for (var noOfImages=0; noOfImages < 4; noOfImages++)		{			imageURL.push(new URLRequest("Images/brick_red.png"));					}			}		public function showImage(index:int,getX:Number,getY:Number)	{				gameImageLoader.curriculumImages[index].visible = true;		gameImageLoader.curriculumImages[index].x = getX;		gameImageLoader.curriculumImages[index].y = getY;			}		public function startAnswerSelectorMotion()	{		gameImageLoader.answerSelector.visible = true;		gameImageLoader.answerSelector.x = answerSelectorX;		gameImageLoader.answerSelector.y = answerSelectorY;		this.addEventListener(Event.ENTER_FRAME,enableKeyboardInteraction);	}	public function enableKeyboardInteraction(event:Event)	{		this.removeEventListener(Event.ENTER_FRAME,enableKeyboardInteraction);		stage.addEventListener(KeyboardEvent.KEY_DOWN,answerSelectorKeyboardControl);	}	public function answerSelectorKeyboardControl(event:KeyboardEvent)	{		if (event.keyCode == Keyboard.RIGHT)		{			if (gameImageLoader.answerSelector.x == answerSelectorX)				gameImageLoader.answerSelector.x += 200;		}		else if (event.keyCode == Keyboard.DOWN)		{			if (gameImageLoader.answerSelector.y == answerSelectorY)				gameImageLoader.answerSelector.y += 200;		}		else if (event.keyCode == Keyboard.LEFT)		{			if (gameImageLoader.answerSelector.x == (answerSelectorX + answerSelectorWidth))				gameImageLoader.answerSelector.x -= 200;		}		else if (event.keyCode == Keyboard.UP)		{			if (gameImageLoader.answerSelector.y == (answerSelectorY + answerSelectorHeight))				gameImageLoader.answerSelector.y -= 200;		}		else if (event.keyCode == Keyboard.ENTER)		{			// CORRECT ANSWER			gameImageLoader.answerSelector.visible = false;			gamePlay.questionFinished();			gamePlay.slider.increaseWidth();		}	}	public function showFourImages(startX:Number,startY:Number,imageWidth:Number,imageHeight:Number)	{		showImage(0,startX,startY);		showImage(1,startX + imageWidth, startY);		showImage(2,startX,startY+imageHeight);		showImage(3,startX+imageWidth,startY + imageHeight);			}	public function hideFourImages()	{		hideImage(0);		hideImage(1);		hideImage(2);		hideImage(3);	}		public function hideImage(index:int)	{		gameImageLoader.curriculumImages[index].visible = false;	}	}	}